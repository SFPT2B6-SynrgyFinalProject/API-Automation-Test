{
	"info": {
		"_postman_id": "23cc5a29-1412-4aa4-89e6-60ba1995f761",
		"name": "FinalProject",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "30537895"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Membuat fungsi untuk menghasilkan email acak\r",
									"function generateRandomEmail() {\r",
									"    var allowedChars = 'abcdefghijklmnopqrstuvwxyz0123456789';\r",
									"    var email = '';\r",
									"    for (var i = 0; i < 10; i++) {\r",
									"        email += allowedChars.charAt(Math.floor(Math.random() * allowedChars.length));\r",
									"    }\r",
									"    return email + '@example.com'; // Menggunakan domain contoh, bisa diganti dengan domain yang sesuai\r",
									"}\r",
									"\r",
									"// Menggunakan fungsi untuk membuat email acak\r",
									"var randomEmail = generateRandomEmail();\r",
									"\r",
									"// Menyimpan email acak ke dalam variabel lingkungan di Postman\r",
									"pm.environment.set('random_email', randomEmail);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Memeriksa bahwa respons memiliki kode status 201 Created",
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"// Memeriksa bahwa tipe konten respons adalah application/json",
									"pm.test(\"Response Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
									"});",
									"",
									"// Memeriksa bahwa objek data berisi bidang yang diperlukan",
									"pm.test('Data object contains required fields', function () {",
									"    const responseData = pm.response.json();",
									"",
									"    // Memeriksa bahwa responseData adalah objek dan mengandung semua kunci yang diharapkan",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.data).to.be.an('object'); ",
									"    pm.expect(responseData.data).to.have.property('email');",
									"    pm.expect(responseData.data).to.have.property('fullName');",
									"    pm.expect(responseData.data).to.have.property('gender');",
									"    pm.expect(responseData.data).to.have.property('birthDate');",
									"    pm.expect(responseData.data).to.not.have.property('password'); ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"email\": \"friscadewanti53@gmail.com\",\r\n//     \"fullName\": \"frisca\",\r\n//     \"gender\": \"Perempuan\",\r\n//     \"birthDate\": \"1996-10-15T00:00:00.000Z\",\r\n//     \"password\": \"password\"\r\n// }\r\n\r\n{\r\n    \"email\": \"{{random_email}}\", // Menggunakan email acak yang telah di-generate sebelumnya\r\n    \"fullName\": \"John Doe\",\r\n    \"gender\": \"Perempuan\",\r\n    \"birthDate\": \"1996-10-15T00:00:00.000Z\",\r\n    \"password\": \"{{password}}\"\r\n\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/api/register"
					},
					"response": [
						{
							"name": "Register_test",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"aljovanm@gmail.com\",\r\n    \"fullName\": \"cekcek\",\r\n    \"gender\": \"perempuan\",\r\n    \"birthDate\": \"1996-10-15T00:00:00.000Z\",\r\n    \"password\": \"12345678\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/register"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 04:30:01 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"email\": \"aljovanm@gmail.com\",\n        \"fullName\": \"cekcek\",\n        \"birthDate\": \"1996-10-15T00:00:00\",\n        \"gender\": \"perempuan\"\n    },\n    \"message\": \"Verification email has been sent successfully\",\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Register_fail",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"aljovanm@gmail.com\",\r\n    \"fullName\": \"cekcek\",\r\n    \"gender\": \"perempuan\",\r\n    \"birthDate\": \"1996-10-15T00:00:00.000Z\",\r\n    \"password\": \"12345678\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/register"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "3d8234a6c83a721772e83a2020beefc0;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 14:58:56 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "77"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"email\": \"You have registered using the same email\"\n    },\n    \"status\": \"fail\"\n}"
						}
					]
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var tokens= jsonData.data.token;",
									"",
									"pm.globals.set(\"tokens\", tokens);",
									"",
									"var passwords = pm.request.body.raw;",
									"pm.globals.set(\"passwords\", passwords);",
									"",
									"if (pm.response.code === 200) {",
									"    pm.test(\"Verify OTP Success Returns 200\", function () {",
									"        // Jika OTP berhasil, kode status harus 200",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Verify OTP Failure Returns 400\", function () {",
									"        // Jika OTP gagal, kode status harus 400",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"} else {",
									"    // Kondisi lainnya, misalnya jika terjadi kesalahan server atau kondisi yang tidak terduga",
									"    pm.test(\"Unexpected Response\", function () {",
									"        pm.expect.fail(\"Unexpected response code: \" + pm.response.code);",
									"    });",
									"}",
									"",
									"pm.test(\"Data object structure is valid\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.data).to.be.an('object');",
									"  pm.expect(responseData.data.token).to.be.a('string');",
									"  pm.expect(responseData.data.type).to.be.a('string');",
									"  pm.expect(responseData.data.email).to.be.a('string');",
									"  pm.expect(responseData.data.roles).to.be.an('array');",
									"});",
									"",
									"",
									"pm.test(\"Email in the data object should not be empty\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData.data).to.be.an('object');",
									"  pm.expect(responseData.data.email).to.exist.and.to.not.be.empty;",
									"});",
									"",
									"",
									"pm.test(\"Token, type, and roles are present in the 'data' object\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData.data).to.exist;",
									"    pm.expect(responseData.data.token).to.exist;",
									"    pm.expect(responseData.data.type).to.exist;",
									"    pm.expect(responseData.data.roles).to.exist;",
									"});",
									"",
									"",
									"pm.test(\"Status is present and not empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.status).to.exist.and.to.not.be.empty;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"friscadewanti53@gmail.com\",\r\n    \"password\": \"passwordd\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/api/login"
					},
					"response": [
						{
							"name": "Login",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"aljovanmp@gmail.com\",\r\n    \"password\": \"12345678\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 14:17:17 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbGpvdmFubXBAZ21haWwuY29tIiwiaWF0IjoxNzA0NjM3MDM3LCJleHAiOjE3MDUxMzcwMzd9.FqRRNW9gkG9mFK6ySt6CgZc7xCaVKbNf64bxEsVjVmQ\",\n        \"type\": \"Bearer\",\n        \"email\": \"aljovanmp@gmail.com\",\n        \"roles\": [\n            \"ROLE_BUYER\"\n        ]\n    },\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Login_test",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"aljovanm@gmail.com\",\r\n    \"password\": \"87654321\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 14:20:42 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbGpvdmFubUBnbWFpbC5jb20iLCJpYXQiOjE3MDQ2MzcyNDIsImV4cCI6MTcwNTEzNzI0Mn0.M3oj3RFl9FFhJF1m66XQfW6IP3aTfRzoV4jxngy8n0w\",\n        \"type\": \"Bearer\",\n        \"email\": \"aljovanm@gmail.com\",\n        \"roles\": [\n            \"ROLE_BUYER\"\n        ]\n    },\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Login_fail",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"aljovanm@gmail.com\",\r\n    \"password\": \"87654321asd\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/login"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "2563f161c452b6a6ebe52fe8f87d5f99;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 14:59:52 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "61"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"authentication\": \"Bad credentials\"\n    },\n    \"status\": \"fail\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Ticket",
			"item": [
				{
					"name": "Get Flight Class",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"pm.test(\"Response has the required fields - id and name, and data array is present and contains the expected array of elements\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    // Memeriksa bahwa responseData adalah objek",
									"    pm.expect(responseData).to.be.an('object');",
									"",
									"    // Memeriksa bahwa responseData memiliki properti 'data'",
									"    pm.expect(responseData).to.have.property('data');",
									"",
									"    // Memeriksa bahwa properti 'data' adalah sebuah array",
									"    pm.expect(responseData.data).to.be.an('array').that.is.not.empty;",
									"    ",
									"    // Memeriksa setiap elemen dalam array 'data'",
									"    responseData.data.forEach(function(item) {",
									"        pm.expect(item).to.have.property('id');",
									"        pm.expect(item).to.have.property('name');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Status is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"  ",
									"    pm.expect(responseData.status).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Status should not be empty\");",
									"});",
									"",
									"pm.test(\"Content-Type is application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{host_tes}}/api/flight/class",
						"description": "This request does not have any parameter. Class Id will be used to filter get ticket"
					},
					"response": [
						{
							"name": "Get Flight Class",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{host_tes}}/api/flight/class"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 22 Jan 2024 13:55:30 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 1,\n            \"name\": \"Ekonomi\"\n        },\n        {\n            \"id\": 2,\n            \"name\": \"Bisnis\"\n        },\n        {\n            \"id\": 3,\n            \"name\": \"First\"\n        }\n    ],\n    \"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Get Airport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response contains the data array\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data).to.exist.and.to.be.an('array');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
									"});\r",
									"\r",
									"pm.test(\"Status field is present in the response\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.status).to.exist;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host_tes}}/api/flight/airport?value=Y",
							"host": [
								"{{host_tes}}"
							],
							"path": [
								"api",
								"flight",
								"airport"
							],
							"query": [
								{
									"key": "value",
									"value": "Y"
								}
							]
						},
						"description": "This API only accept 'value' as filter. This value will filter the airport based on city name, or airport name, or airport code (for ex. Soetta code will be CGK).\n\nValue parameter could also to be set to be null in case you want to get all airport\n\nNotes: 'Semua bandara di \\[city\\]' will have its own single data and code. Currently it is only available in Jakarta with code JKTA and Yogyakarta with code YKIA. Please hit the API using 'Y' as value in parameter for details."
					},
					"response": [
						{
							"name": "Get All Airport",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host_tes}}/api/flight/airport",
									"host": [
										"{{host_tes}}"
									],
									"path": [
										"api",
										"flight",
										"airport"
									],
									"query": [
										{
											"key": "value",
											"value": "Y",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 22 Jan 2024 13:57:11 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 31,\n            \"airportName\": \"Adisucipto International Airport\",\n            \"cityName\": \"Yogyakarta\",\n            \"code\": \"JOG\"\n        },\n        {\n            \"id\": 17,\n            \"airportName\": \"Mopah Airport\",\n            \"cityName\": \"Merauke\",\n            \"code\": \"GOX\"\n        },\n        {\n            \"id\": 9,\n            \"airportName\": \"Halim Perdanakusuma Airport\",\n            \"cityName\": \"Jakarta\",\n            \"code\": \"HLP\"\n        },\n        {\n            \"id\": 28,\n            \"airportName\": \"Juanda International Airport\",\n            \"cityName\": \"Surabaya\",\n            \"code\": \"SUB\"\n        },\n        {\n            \"id\": 18,\n            \"airportName\": \"IMIP Airport\",\n            \"cityName\": \"Morowali\",\n            \"code\": \"MWS\"\n        },\n        {\n            \"id\": 7,\n            \"airportName\": \"Frans Kaisiepo Airport\",\n            \"cityName\": \"Biak\",\n            \"code\": \"BIK\"\n        },\n        {\n            \"id\": 5,\n            \"airportName\": \"Hang Nadim Airport\",\n            \"cityName\": \"Batam\",\n            \"code\": \"BTH\"\n        },\n        {\n            \"id\": 33,\n            \"airportName\": \"Semua bandara di Jakarta\",\n            \"cityName\": \"Jakarta\",\n            \"code\": \"JKTA\"\n        },\n        {\n            \"id\": 16,\n            \"airportName\": \"Rendani Airport\",\n            \"cityName\": \"Manokwari\",\n            \"code\": \"MKW\"\n        },\n        {\n            \"id\": 30,\n            \"airportName\": \"Sultan Babullah Airport\",\n            \"cityName\": \"Ternate\",\n            \"code\": \"TTE\"\n        },\n        {\n            \"id\": 2,\n            \"airportName\": \"Radin Inten II International Airport\",\n            \"cityName\": \"Bandar Lampung\",\n            \"code\": \"TKG\"\n        },\n        {\n            \"id\": 22,\n            \"airportName\": \"Sultan Mahmud Badaruddin II Airport\",\n            \"cityName\": \"Palembang\",\n            \"code\": \"PLM\"\n        },\n        {\n            \"id\": 6,\n            \"airportName\": \"Fatmawati Soekarno\",\n            \"cityName\": \"Bengkulu\",\n            \"code\": \"BKS\"\n        },\n        {\n            \"id\": 20,\n            \"airportName\": \"Minangkabau International Airport\",\n            \"cityName\": \"Padang\",\n            \"code\": \"PDG\"\n        },\n        {\n            \"id\": 15,\n            \"airportName\": \"Sam Ratulangi International Airport\",\n            \"cityName\": \"Manado\",\n            \"code\": \"MDC\"\n        },\n        {\n            \"id\": 34,\n            \"airportName\": \"Semua bandara di Yogyakarta\",\n            \"cityName\": \"Yogyakarta\",\n            \"code\": \"YKIA\"\n        },\n        {\n            \"id\": 3,\n            \"airportName\": \"Husein Sastranegara International Airport\",\n            \"cityName\": \"Bandung\",\n            \"code\": \"BDO\"\n        },\n        {\n            \"id\": 26,\n            \"airportName\": \"Temindung Airport\",\n            \"cityName\": \"Samarinda\",\n            \"code\": \"SRI\"\n        },\n        {\n            \"id\": 1,\n            \"airportName\": \"Sultan Aji Muhammad Sulaiman Airport\",\n            \"cityName\": \"Balikpapan\",\n            \"code\": \"BPN\"\n        },\n        {\n            \"id\": 4,\n            \"airportName\": \"Majalengka Kertajati International Airport\",\n            \"cityName\": \"Majalengka\",\n            \"code\": \"KJT\"\n        },\n        {\n            \"id\": 8,\n            \"airportName\": \"Ngurah Rai International Airport\",\n            \"cityName\": \"Denpasar (Bali)\",\n            \"code\": \"DPS\"\n        },\n        {\n            \"id\": 23,\n            \"airportName\": \"Mutiara SIS Al-Jufrie Airport\",\n            \"cityName\": \"Palu\",\n            \"code\": \"PLW\"\n        },\n        {\n            \"id\": 29,\n            \"airportName\": \"Adisumarmo International Airport\",\n            \"cityName\": \"Surakarta\",\n            \"code\": \"SOC\"\n        },\n        {\n            \"id\": 25,\n            \"airportName\": \"APT Pranoto Airport\",\n            \"cityName\": \"Samarinda\",\n            \"code\": \"AAP\"\n        },\n        {\n            \"id\": 14,\n            \"airportName\": \"Sentani Airport\",\n            \"cityName\": \"Jayapura\",\n            \"code\": \"DJJ\"\n        },\n        {\n            \"id\": 12,\n            \"airportName\": \"Soekarno-Hatta International Airport\",\n            \"cityName\": \"Jakarta\",\n            \"code\": \"CGK\"\n        },\n        {\n            \"id\": 24,\n            \"airportName\": \"Supadio Airport\",\n            \"cityName\": \"Pontianak\",\n            \"code\": \"PNK\"\n        },\n        {\n            \"id\": 21,\n            \"airportName\": \"Tjilik Riwut Airport\",\n            \"cityName\": \"Palangkaraya\",\n            \"code\": \"PKY\"\n        },\n        {\n            \"id\": 32,\n            \"airportName\": \"Yogyakarta International Airport\",\n            \"cityName\": \"Yogyakarta\",\n            \"code\": \"YIA\"\n        },\n        {\n            \"id\": 27,\n            \"airportName\": \"Achmad Yani International Airport\",\n            \"cityName\": \"Semarang\",\n            \"code\": \"SRG\"\n        },\n        {\n            \"id\": 13,\n            \"airportName\": \"Sultan Thaha Airport\",\n            \"cityName\": \"Jambi\",\n            \"code\": \"DJB\"\n        }\n    ],\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Get Airport With Filter",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host_tes}}/api/flight/airport?value=Y",
									"host": [
										"{{host_tes}}"
									],
									"path": [
										"api",
										"flight",
										"airport"
									],
									"query": [
										{
											"key": "value",
											"value": "Y"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 22 Jan 2024 13:57:33 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": [\n        {\n            \"id\": 31,\n            \"airportName\": \"Adisucipto International Airport\",\n            \"cityName\": \"Yogyakarta\",\n            \"code\": \"JOG\"\n        },\n        {\n            \"id\": 32,\n            \"airportName\": \"Yogyakarta International Airport\",\n            \"cityName\": \"Yogyakarta\",\n            \"code\": \"YIA\"\n        },\n        {\n            \"id\": 33,\n            \"airportName\": \"Semua bandara di Yogyakarta\",\n            \"cityName\": \"Yogyakarta\",\n            \"code\": \"YKIA\"\n        }\n    ],\n    \"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Get Ticket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Data object should exist and be an object\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data).to.exist.and.to.be.an('object');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"AvailableAirline array is present and contains expected number of elements\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data.availableAirline).to.be.an('array').that.is.not.empty;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"classId\": 1,\r\n    \"passenger\": {\r\n        \"adult\": 1,\r\n        \"infant\": 1,\r\n        \"child\": 1\r\n    },\r\n    \"arrivalCode\": \"JKTA\",\r\n    \"departureCode\": \"YKIA\",\r\n    \"departureDateStart\": \"2024-01-21T17:00:00.000Z\",\r\n    \"departureDateEnd\": \"2024-01-22T17:00:00.000Z\",\r\n    \"airlineId\": [],\r\n    \"sortBy\": [\"price\"],\r\n    \"page\": 0,\r\n    \"dataPerPage\": 10\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host_tes}}/api/flight/ticket",
						"description": "This API is used to get ticket data. POST method is used because the complexity of parameter, hence the parameter is placed in body.\n\nAll parameter is required except for 'arrivalDateStart' and 'arrivalDateEnd'. Please check example: Get Ticket Minimum Parameter for further example\n\nNotes:\n\n1. Data only available from 22 Jan 2024 until 31 March 2024\n2. Presented date in iso format (UTC Timezone)\n3. class id is accuired from Get Flight Class API\n4. arrival code and departure code is accuired from Get Airport API\n5. sort by array could be null and only accept 'price' and 'duration' or both\n6. page is started from 0"
					},
					"response": [
						{
							"name": "Get Ticket Minimum Parameter",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classId\": 1,\r\n    \"passenger\": {\r\n        \"adult\": 1,\r\n        \"infant\": 1,\r\n        \"child\": 1\r\n    },\r\n    \"arrivalCode\": \"JKTA\",\r\n    \"departureCode\": \"YKIA\",\r\n    \"departureDateStart\": \"2024-01-21T17:00:00.000Z\",\r\n    \"departureDateEnd\": \"2024-01-22T17:00:00.000Z\",\r\n    \"airlineId\": [],\r\n    \"sortBy\": [\"price\"],\r\n    \"page\": 0,\r\n    \"dataPerPage\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/flight/ticket"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 22 Jan 2024 14:11:52 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"availableAirline\": [\n            {\n                \"airlineId\": 1,\n                \"airlineName\": \"Garuda Indonesia\",\n                \"iconUrl\": \"/icon/garuda\"\n            },\n            {\n                \"airlineId\": 2,\n                \"airlineName\": \"Citilink\",\n                \"iconUrl\": \"/icon/citilink\"\n            },\n            {\n                \"airlineId\": 3,\n                \"airlineName\": \"Lion Air\",\n                \"iconUrl\": \"/icon/lion\"\n            },\n            {\n                \"airlineId\": 4,\n                \"airlineName\": \"Super Air Jet\",\n                \"iconUrl\": \"/icon/super\"\n            },\n            {\n                \"airlineId\": 5,\n                \"airlineName\": \"Batik Air\",\n                \"iconUrl\": \"/icon/batik\"\n            }\n        ],\n        \"availableFlight\": [\n            {\n                \"ticketId\": 9899,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T14:15:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T16:15:00.000Z\",\n                \"durationInMin\": 120,\n                \"airline\": {\n                    \"name\": \"Super Air Jet\",\n                    \"iconUrl\": \"/icon/super\",\n                    \"airlineId\": 4\n                },\n                \"basePricePerPerson\": 674926,\n                \"discountedPricePerPerson\": 661897,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T14:15:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T16:15:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 120,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 674926\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 674926\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 67493\n                            }\n                        },\n                        \"totalDicount\": 26058,\n                        \"tax\": 0,\n                        \"total\": 1391287\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9827,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T14:15:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T16:15:00.000Z\",\n                \"durationInMin\": 120,\n                \"airline\": {\n                    \"name\": \"Super Air Jet\",\n                    \"iconUrl\": \"/icon/super\",\n                    \"airlineId\": 4\n                },\n                \"basePricePerPerson\": 707726,\n                \"discountedPricePerPerson\": 692523,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T14:15:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T16:15:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 120,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 707726\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 707726\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 70773\n                            }\n                        },\n                        \"totalDicount\": 30406,\n                        \"tax\": 0,\n                        \"total\": 1455819\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9826,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T13:30:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T14:55:00.000Z\",\n                \"durationInMin\": 85,\n                \"airline\": {\n                    \"name\": \"Lion Air\",\n                    \"iconUrl\": \"/icon/lion\",\n                    \"airlineId\": 3\n                },\n                \"basePricePerPerson\": 723200,\n                \"discountedPricePerPerson\": 706126,\n                \"luggage\": 7,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T13:30:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T14:55:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 85,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 723200\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 723200\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 72320\n                            }\n                        },\n                        \"totalDicount\": 34148,\n                        \"tax\": 0,\n                        \"total\": 1484572\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9825,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T13:25:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T14:40:00.000Z\",\n                \"durationInMin\": 75,\n                \"airline\": {\n                    \"name\": \"Garuda Indonesia\",\n                    \"iconUrl\": \"/icon/garuda\",\n                    \"airlineId\": 1\n                },\n                \"basePricePerPerson\": 782260,\n                \"discountedPricePerPerson\": 767170,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T13:25:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T14:40:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 3,\n                            \"name\": \"Hiburan\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        },\n                        {\n                            \"id\": 2,\n                            \"name\": \"Makanan\"\n                        }\n                    ],\n                    \"durationInMin\": 75,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 782260\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 782260\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 78226\n                            }\n                        },\n                        \"totalDicount\": 30180,\n                        \"tax\": 0,\n                        \"total\": 1612566\n                    }\n                },\n                \"withFood\": true,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9828,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T14:15:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T16:15:00.000Z\",\n                \"durationInMin\": 120,\n                \"airline\": {\n                    \"name\": \"Batik Air\",\n                    \"iconUrl\": \"/icon/batik\",\n                    \"airlineId\": 5\n                },\n                \"basePricePerPerson\": 810012,\n                \"discountedPricePerPerson\": 777802,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T14:15:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T16:15:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 120,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 810012\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 810012\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 81001\n                            }\n                        },\n                        \"totalDicount\": 64420,\n                        \"tax\": 0,\n                        \"total\": 1636605\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            }\n        ],\n        \"dataPerPage\": 5,\n        \"lastPage\": 1,\n        \"dataInPage\": 5,\n        \"currentPage\": 0\n    },\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Get Ticket with arrival date time",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"classId\": 1,\r\n    \"passenger\": {\r\n        \"adult\": 1,\r\n        \"infant\": 1,\r\n        \"child\": 1\r\n    },\r\n    \"arrivalCode\": \"JKTA\",\r\n    \"departureCode\": \"YKIA\",\r\n    \"departureDateStart\": \"2024-01-21T17:00:00.000Z\",\r\n    \"departureDateEnd\": \"2024-01-22T17:00:00.000Z\",\r\n    \"arrivalDateStart\": \"2024-01-21T06:00:00.000Z\",\r\n    \"arrivalDateEnd\": \"2024-01-22T13:00:00.000Z\",\r\n    \"airlineId\": [],\r\n    \"sortBy\": [\"price\"],\r\n    \"page\": 0,\r\n    \"dataPerPage\": 5\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/flight/ticket"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Mon, 22 Jan 2024 14:46:00 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"availableAirline\": [\n            {\n                \"airlineId\": 1,\n                \"airlineName\": \"Garuda Indonesia\",\n                \"iconUrl\": \"/icon/garuda\"\n            },\n            {\n                \"airlineId\": 2,\n                \"airlineName\": \"Citilink\",\n                \"iconUrl\": \"/icon/citilink\"\n            },\n            {\n                \"airlineId\": 3,\n                \"airlineName\": \"Lion Air\",\n                \"iconUrl\": \"/icon/lion\"\n            },\n            {\n                \"airlineId\": 4,\n                \"airlineName\": \"Super Air Jet\",\n                \"iconUrl\": \"/icon/super\"\n            },\n            {\n                \"airlineId\": 5,\n                \"airlineName\": \"Batik Air\",\n                \"iconUrl\": \"/icon/batik\"\n            }\n        ],\n        \"availableFlight\": [\n            {\n                \"ticketId\": 9899,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T07:15:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T09:15:00.000Z\",\n                \"durationInMin\": 120,\n                \"airline\": {\n                    \"name\": \"Super Air Jet\",\n                    \"iconUrl\": \"/icon/super\",\n                    \"airlineId\": 4\n                },\n                \"basePricePerPerson\": 674926,\n                \"discountedPricePerPerson\": 661897,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T07:15:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T09:15:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 120,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 674926\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 674926\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 67493\n                            }\n                        },\n                        \"totalDicount\": 26058,\n                        \"tax\": 0,\n                        \"total\": 1391287\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9827,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T07:15:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T09:15:00.000Z\",\n                \"durationInMin\": 120,\n                \"airline\": {\n                    \"name\": \"Super Air Jet\",\n                    \"iconUrl\": \"/icon/super\",\n                    \"airlineId\": 4\n                },\n                \"basePricePerPerson\": 707726,\n                \"discountedPricePerPerson\": 692523,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T07:15:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T09:15:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 120,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 707726\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 707726\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 70773\n                            }\n                        },\n                        \"totalDicount\": 30406,\n                        \"tax\": 0,\n                        \"total\": 1455819\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9826,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T06:30:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T07:55:00.000Z\",\n                \"durationInMin\": 85,\n                \"airline\": {\n                    \"name\": \"Lion Air\",\n                    \"iconUrl\": \"/icon/lion\",\n                    \"airlineId\": 3\n                },\n                \"basePricePerPerson\": 723200,\n                \"discountedPricePerPerson\": 706126,\n                \"luggage\": 7,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T06:30:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T07:55:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 85,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 723200\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 723200\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 72320\n                            }\n                        },\n                        \"totalDicount\": 34148,\n                        \"tax\": 0,\n                        \"total\": 1484572\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9825,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T06:25:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T07:40:00.000Z\",\n                \"durationInMin\": 75,\n                \"airline\": {\n                    \"name\": \"Garuda Indonesia\",\n                    \"iconUrl\": \"/icon/garuda\",\n                    \"airlineId\": 1\n                },\n                \"basePricePerPerson\": 782260,\n                \"discountedPricePerPerson\": 767170,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T06:25:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T07:40:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 3,\n                            \"name\": \"Hiburan\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        },\n                        {\n                            \"id\": 2,\n                            \"name\": \"Makanan\"\n                        }\n                    ],\n                    \"durationInMin\": 75,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 782260\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 782260\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 78226\n                            }\n                        },\n                        \"totalDicount\": 30180,\n                        \"tax\": 0,\n                        \"total\": 1612566\n                    }\n                },\n                \"withFood\": true,\n                \"withLuggage\": true\n            },\n            {\n                \"ticketId\": 9828,\n                \"departureAirportCode\": \"YIA\",\n                \"arrivalAirportCode\": \"CGK\",\n                \"departureDateTime\": \"2024-01-22T07:15:00.000Z\",\n                \"arrivalDateTime\": \"2024-01-22T09:15:00.000Z\",\n                \"durationInMin\": 120,\n                \"airline\": {\n                    \"name\": \"Batik Air\",\n                    \"iconUrl\": \"/icon/batik\",\n                    \"airlineId\": 5\n                },\n                \"basePricePerPerson\": 810012,\n                \"discountedPricePerPerson\": 777802,\n                \"luggage\": 20,\n                \"ticketDetails\": {\n                    \"departure\": {\n                        \"airportId\": 32,\n                        \"airportName\": \"Yogyakarta International Airport\",\n                        \"dateTime\": \"2024-01-22T07:15:00.000Z\"\n                    },\n                    \"arrival\": {\n                        \"airportId\": 12,\n                        \"airportName\": \"Soekarno-Hatta International Airport\",\n                        \"dateTime\": \"2024-01-22T09:15:00.000Z\"\n                    },\n                    \"facility\": [\n                        {\n                            \"id\": 4,\n                            \"name\": \"Bagasi Kabin 7 Kg\"\n                        },\n                        {\n                            \"id\": 1,\n                            \"name\": \"Bagasi 20 Kg\"\n                        }\n                    ],\n                    \"durationInMin\": 120,\n                    \"priceDetails\": {\n                        \"basePriceBreakdown\": {\n                            \"adult\": {\n                                \"passengerCount\": 1,\n                                \"price\": 810012\n                            },\n                            \"child\": {\n                                \"passengerCount\": 1,\n                                \"price\": 810012\n                            },\n                            \"infant\": {\n                                \"passengerCount\": 1,\n                                \"price\": 81001\n                            }\n                        },\n                        \"totalDicount\": 64420,\n                        \"tax\": 0,\n                        \"total\": 1636605\n                    }\n                },\n                \"withFood\": false,\n                \"withLuggage\": true\n            }\n        ],\n        \"dataPerPage\": 5,\n        \"lastPage\": 1,\n        \"dataInPage\": 5,\n        \"currentPage\": 0\n    },\n    \"status\": \"success\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"var oid= jsonData.data.orderId;",
									"",
									"pm.globals.set(\"oid\", oid);",
									"",
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate orderer's details\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.data.orderer).to.be.an('object');",
									"    pm.expect(responseData.data.orderer.fullName).to.be.a('string');",
									"    pm.expect(responseData.data.orderer.phoneNumber).to.be.a('string');",
									"    pm.expect(responseData.data.orderer.email).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Passenger details must contain arrays for adult, child, and infant\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData.data.passengerDetails).to.be.an('object');",
									"    pm.expect(responseData.data.passengerDetails.adult).to.be.an('array');",
									"    pm.expect(responseData.data.passengerDetails.child).to.be.an('array');",
									"    pm.expect(responseData.data.passengerDetails.infant).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ticketId\": 9805,\r\n    \"classId\": 1,\r\n    \"orderer\": {\r\n        \"fullName\": \"Tuan hanif abdu\",\r\n        \"phoneNumber\": \"081222221111\",\r\n        \"email\": \"abdurrasyidhanif@gmail.com\"\r\n    },\r\n    \"passengerDetails\": {\r\n        \"adult\": [\r\n            \"Tuan Aljovan\"\r\n        ],\r\n        \"child\": [\r\n            \"Nona Meimei\"\r\n        ],\r\n        \"infant\": [\r\n            \"Nyonya Ros\"\r\n        ]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host_tes}}/api/orders"
					},
					"response": [
						{
							"name": "Create Order",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"ticketId\": 9805,\r\n    \"classId\": 1,\r\n    \"orderer\": {\r\n        \"fullName\": \"Tuan hanif abdu\",\r\n        \"phoneNumber\": \"081222221111\",\r\n        \"email\": \"abdurrasyidhanif@gmail.com\"\r\n    },\r\n    \"passengerDetails\": {\r\n        \"adult\": [\r\n            \"Tuan Aljovan\",\r\n            \"Nyonya Ros\"\r\n        ],\r\n        \"child\": [\r\n            \"Nona meimei\"\r\n        ],\r\n        \"infant\": [\r\n            \"Tuan Upin\"\r\n        ]\r\n    }\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/orders"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jan 2024 13:25:31 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"orderId\": \"ae9f18d\",\n        \"orderer\": {\n            \"fullName\": \"Tuan hanif abdu\",\n            \"phoneNumber\": \"081222221111\",\n            \"email\": \"abdurrasyidhanif@gmail.com\"\n        },\n        \"flightDetails\": {\n            \"departure\": {\n                \"airportId\": 1,\n                \"airportName\": \"Sultan Aji Muhammad Sulaiman Airport\",\n                \"dateTime\": \"2024-01-22T07:20:00.000Z\",\n                \"city\": \"Balikpapan\"\n            },\n            \"arrival\": {\n                \"airportId\": 12,\n                \"airportName\": \"Soekarno-Hatta International Airport\",\n                \"dateTime\": \"2024-01-22T08:45:00.000Z\",\n                \"city\": \"Jakarta\"\n            },\n            \"airline\": {\n                \"name\": \"Super Air Jet\",\n                \"iconUrl\": \"/icon/super.png\",\n                \"airlineId\": 4\n            },\n            \"flightCode\": \"IU611\"\n        },\n        \"passengerDetails\": {\n            \"adult\": [\n                \"Tuan Aljovan\",\n                \"Nyonya Ros\"\n            ],\n            \"child\": [\n                \"Nona meimei\"\n            ],\n            \"infant\": [\n                \"Tuan Upin\"\n            ]\n        },\n        \"priceDetails\": {\n            \"basePriceBreakdown\": {\n                \"adult\": {\n                    \"passengerCount\": 2,\n                    \"price\": 1999760\n                },\n                \"child\": {\n                    \"passengerCount\": 1,\n                    \"price\": 999880\n                },\n                \"infant\": {\n                    \"passengerCount\": 1,\n                    \"price\": 99988\n                }\n            },\n            \"totalDicount\": 103302,\n            \"tax\": 0,\n            \"total\": 2996326\n        },\n        \"paymentStatus\": \"unpaid\"\n    },\n    \"message\": \"Pesanan berhasil dibuat.\",\n    \"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Order Detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host_tes}}/api/orders/details?orderId={{oid}}",
							"host": [
								"{{host_tes}}"
							],
							"path": [
								"api",
								"orders",
								"details"
							],
							"query": [
								{
									"key": "orderId",
									"value": "{{oid}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Order Detail",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{host_tes}}/api/orders/details?orderId=ae9f18d",
									"host": [
										"{{host_tes}}"
									],
									"path": [
										"api",
										"orders",
										"details"
									],
									"query": [
										{
											"key": "orderId",
											"value": "ae9f18d"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jan 2024 13:31:55 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"orderId\": \"ae9f18d\",\n        \"orderer\": {\n            \"fullName\": \"Tuan hanif abdu\",\n            \"phoneNumber\": \"081222221111\",\n            \"email\": \"abdurrasyidhanif@gmail.com\"\n        },\n        \"flightDetails\": {\n            \"departure\": {\n                \"airportId\": 1,\n                \"airportName\": \"Sultan Aji Muhammad Sulaiman Airport\",\n                \"dateTime\": \"2024-01-22T07:20:00.000Z\",\n                \"city\": \"Balikpapan\"\n            },\n            \"arrival\": {\n                \"airportId\": 12,\n                \"airportName\": \"Soekarno-Hatta International Airport\",\n                \"dateTime\": \"2024-01-22T08:45:00.000Z\",\n                \"city\": \"Jakarta\"\n            },\n            \"airline\": {\n                \"name\": \"Super Air Jet\",\n                \"iconUrl\": \"/icon/super.png\",\n                \"airlineId\": 4\n            },\n            \"flightCode\": \"IU611\"\n        },\n        \"passengerDetails\": {\n            \"adult\": [\n                \"Tuan Aljovan\",\n                \"Nyonya Ros\"\n            ],\n            \"child\": [\n                \"Nona meimei\"\n            ],\n            \"infant\": [\n                \"Tuan Upin\"\n            ]\n        },\n        \"priceDetails\": {\n            \"basePriceBreakdown\": {\n                \"adult\": {\n                    \"passengerCount\": 2,\n                    \"price\": 1999760\n                },\n                \"child\": {\n                    \"passengerCount\": 1,\n                    \"price\": 999880\n                },\n                \"infant\": {\n                    \"passengerCount\": 1,\n                    \"price\": 99988\n                }\n            },\n            \"totalDicount\": 103302,\n            \"tax\": 0,\n            \"total\": 2996326\n        },\n        \"paymentStatus\": \"paid\",\n        \"luggage\": 20\n    },\n    \"message\": \"Detail pesanan berhasil diperoleh.\",\n    \"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Pay Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"  pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response contains data object with orderId\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data).to.exist.and.to.have.property('orderId');\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response message is not empty\", function () {\r",
									"  const responseData = pm.response.json();\r",
									"  \r",
									"  pm.expect(responseData.message).to.exist.and.to.not.be.empty;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response status is not empty\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseData.status).to.not.be.empty;\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"orderId\": \"{{oid}}\",\r\n    \"cardNumber\": \"1234567890112233\",\r\n    \"cardName\": \"Hanif\",\r\n    \"cvv\": \"123\",\r\n    \"expiredDate\": \"2028-05-31T00:00:00.000Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host_tes}}/api/orders/payment",
						"description": "To pay order, Server only accept the following data:\n\nStartFragment\n\n``` json\n\"cardNumber\": \"1234567890112233\",\n\"cardName\": \"Hanif\",\n\"cvv\": \"123\",\n\"expiredDate\": \"2028-05-31T00:00:00.000Z\"\n\n ```\n\nEndFragment"
					},
					"response": [
						{
							"name": "Pay Order",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"orderId\": \"ae9f18d\",\r\n    \"cardNumber\": \"1234567890112233\",\r\n    \"cardName\": \"Hanif\",\r\n    \"cvv\": \"123\",\r\n    \"expiredDate\": \"2028-05-31T00:00:00.000Z\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/orders/payment"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jan 2024 13:29:23 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"orderId\": \"ae9f18d\"\n    },\n    \"message\": \"Pesanan berhasil dibayarkan\",\n    \"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Get Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host_tes}}/api/orders?status=COMPLETED",
							"host": [
								"{{host_tes}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "status",
									"value": "COMPLETED"
								}
							]
						}
					},
					"response": [
						{
							"name": "Get Order Completed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_tes}}/api/orders?status=COMPLETED",
									"host": [
										"{{host_tes}}"
									],
									"path": [
										"api",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "COMPLETED"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jan 2024 13:29:42 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"orders\": [\n            {\n                \"departure\": {\n                    \"airportId\": 1,\n                    \"airportName\": \"Sultan Aji Muhammad Sulaiman Airport\",\n                    \"dateTime\": \"2024-01-22T07:20:00.000Z\",\n                    \"city\": \"Balikpapan\"\n                },\n                \"arrival\": {\n                    \"airportId\": 12,\n                    \"airportName\": \"Soekarno-Hatta International Airport\",\n                    \"dateTime\": \"2024-01-22T08:45:00.000Z\",\n                    \"city\": \"Jakarta\"\n                },\n                \"airline\": {\n                    \"name\": \"Super Air Jet\",\n                    \"iconUrl\": \"/icon/super.png\",\n                    \"airlineId\": 4\n                },\n                \"flightCode\": \"IU611\",\n                \"orderId\": \"ae9f18d\",\n                \"paymentStatus\": \"paid\",\n                \"totalPassengers\": 4\n            }\n        ]\n    },\n    \"message\": \"List order berhasil didapatkan\",\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Get Order Ongoing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{host_tes}}/api/orders?status=ONGOING",
									"host": [
										"{{host_tes}}"
									],
									"path": [
										"api",
										"orders"
									],
									"query": [
										{
											"key": "status",
											"value": "ONGOING"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jan 2024 13:30:36 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"orders\": []\n    },\n    \"message\": \"List order berhasil didapatkan\",\n    \"status\": \"success\"\n}"
						}
					]
				},
				{
					"name": "Delete Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Response status code is 200 | Delete Order is success\", function () {\r",
									"  pm.expect(pm.response.code).to.equal(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host_tes}}/api/orders?orderId={{oid}}",
							"host": [
								"{{host_tes}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "orderId",
									"value": "{{oid}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Delete Order",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{host_tes}}/api/orders?orderId=ae9f18d",
									"host": [
										"{{host_tes}}"
									],
									"path": [
										"api",
										"orders"
									],
									"query": [
										{
											"key": "orderId",
											"value": "ae9f18d"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 30 Jan 2024 13:38:44 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"orderId\": \"ae9f18d\"\n    },\n    \"message\": \"Pesanan berhasil dihapus\",\n    \"status\": \"success\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "Get User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"//Fixed syntax ",
									"pm.test(\"Response status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response body is a valid JSON\", function () {",
									"  pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response has data property with valid structure\", function () {",
									"  pm.expect(pm.response.json().data).to.be.an('object').that.has.all.keys('gender', 'fullName', 'noHp', 'birthDate', 'email');",
									"});",
									"",
									"pm.test(\"Response has status property\", function () {",
									"  pm.expect(pm.response.json()).to.have.property('status');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{host}}/api/user"
					},
					"response": [
						{
							"name": "Get User - Success",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "https://be-finpro-ev4x53wgca-uc.a.run.app/api/user"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 13:23:33 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"gender\": \"Laki-laki\",\n        \"fullName\": \"hanif rasyid\",\n        \"noHp\": null,\n        \"birthDate\": \"1996-10-15T00:00:00\",\n        \"email\": \"abdurrasyidhanif@gmail.com\"\n    },\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Get User - Fail",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "https://be-finpro-ev4x53wgca-uc.a.run.app/api/user"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "2bf61a30ebb7560f68354c18eb4b5c2f;o=1"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 13:26:08 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "101"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"authentication\": \"Full authentication is required to access this resource\"\n    },\n    \"status\": \"fail\"\n}"
						}
					]
				},
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Memeriksa bahwa tipe konten respons adalah application/json\r",
									"pm.test('Response Content-Type is application/json', function () {\r",
									"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');\r",
									"});\r",
									"\r",
									"// Memeriksa bahwa bidang status ada dalam respons\r",
									"pm.test('Status field is present in the response', function () {\r",
									"    const responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.have.property('status');\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"friscadewanti53@gmail.com\",\n    \"noHp\": \"0812222213111\",\n    \"fullName\": \"Frisca\",\n    \"birthDate\": \"2005-10-15T00:00:00.000Z\",\n    \"gender\": \"Perempuan\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/api/user"
					},
					"response": [
						{
							"name": "Update User - Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"abdurrasyidhanif@gmail.com\",\n    \"noHp\": \"081222221111\",\n    \"fullName\": \"hanif abdu\",\n    \"birthDate\": \"2005-10-15T00:00:00.000Z\",\n    \"gender\": \"Laki-laki\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://be-finpro-ev4x53wgca-uc.a.run.app/api/user"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 13:29:17 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"gender\": \"Laki-laki\",\n        \"fullName\": \"hanif abdu\",\n        \"noHp\": \"081222221111\",\n        \"birthDate\": \"2005-10-15T00:00:00\",\n        \"email\": \"abdurrasyidhanif@gmail.com\"\n    },\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Update User - Fail",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"abdurrasyidhanif@gmail.com\",\n    \"noHp\": \"081222221111\",\n    \"fullName\": \"hanif abdur\",\n    \"birthDate\": \"2005-10-15T00:00:00.000Z\",\n    \"gender\": \"Laki-laki\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://be-finpro-ev4x53wgca-uc.a.run.app/api/user"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "e8e13d85d3afed9efe367fdc8c21125a;o=1"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 13:30:02 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "101"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"authentication\": \"Full authentication is required to access this resource\"\n    },\n    \"status\": \"fail\"\n}"
						}
					]
				},
				{
					"name": "Update Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonDataPassword1 = pm.request.body.raw;\r",
									"var forgetPasswords= jsonDataPassword1.newPassword;\r",
									"pm.globals.set(\"forgetPasswords\", forgetPasswords);\r",
									"\r",
									"if (pm.response.code === 200) {\r",
									"    pm.test(\"Success Update Password\", function () {\r",
									"        // Jika OTP berhasil, kode status harus 200\r",
									"        pm.expect(pm.response.code).to.equal(200);\r",
									"    });\r",
									"} else if (pm.response.code === 401) {\r",
									"    pm.test(\"Failure Update Password\", function () {\r",
									"        // Jika OTP gagal, kode status harus 401\r",
									"        pm.expect(pm.response.code).to.equal(401);\r",
									"    });\r",
									"} else {\r",
									"    // Kondisi lainnya, misalnya jika terjadi kesalahan server atau kondisi yang tidak terduga\r",
									"    pm.test(\"Unexpected Response\", function () {\r",
									"        pm.expect.fail(\"Unexpected response code: \" + pm.response.code);\r",
									"    });\r",
									"}\r",
									"\r",
									"var passwords=forgetPasswords;\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentPassword\": \"{{passwords}}\",\n  \"newPassword\": \"passwordd\",\n  \"confirmPassword\": \"passwordd\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/api/user/password"
					},
					"response": [
						{
							"name": "Update Password - Success",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentPassword\": \"password\",\n  \"newPassword\": \"halohalo\",\n  \"confirmPassword\": \"halohalo\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://be-finpro-ev4x53wgca-uc.a.run.app/api/user/password"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 13:31:33 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": null,\n    \"message\": \"Password updated successfully!\",\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Update Password - Fail",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentPassword\": \"password\",\n  \"newPassword\": \"haha\",\n  \"confirmPassword\": \"haha\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "https://be-finpro-ev4x53wgca-uc.a.run.app/api/user/password"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "b2fe2947ceb44811b1e0645126dd6d0d;o=1"
								},
								{
									"key": "Date",
									"value": "Tue, 16 Jan 2024 13:31:03 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "124"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"confirmPassword\": \"size must be between 8 and 100\",\n        \"newPassword\": \"size must be between 8 and 100\"\n    },\n    \"status\": \"fail\"\n}"
						}
					]
				},
				{
					"name": "Forget Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    pm.test(\"Sent Verify OTP Success Returns 200\", function () {",
									"        // Jika OTP berhasil, kode status harus 200",
									"        pm.expect(pm.response.code).to.equal(200);",
									"    });",
									"} else if (pm.response.code === 400) {",
									"    pm.test(\"Verify OTP Failure Returns 400\", function () {",
									"        // Jika OTP gagal, kode status harus 400",
									"        pm.expect(pm.response.code).to.equal(400);",
									"    });",
									"} else {",
									"    // Kondisi lainnya, misalnya jika terjadi kesalahan server atau kondisi yang tidak terduga",
									"    pm.test(\"Unexpected Response\", function () {",
									"        pm.expect.fail(\"Unexpected response code: \" + pm.response.code);",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"{{emails}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/api/forget-password"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {\r",
									"    pm.test(\"Verify OTP Success Returns 201\", function () {\r",
									"        pm.expect(pm.response.code).to.equal(201);\r",
									"    });\r",
									"} else if (pm.response.code === 400) {\r",
									"    pm.test(\"Verify OTP Failure Returns 400\", function () {\r",
									"        // Jika OTP gagal, kode status harus 400\r",
									"        pm.expect(pm.response.code).to.equal(400);\r",
									"    });\r",
									"} else {\r",
									"    // Kondisi lainnya, misalnya jika terjadi kesalahan server atau kondisi yang tidak terduga\r",
									"    pm.test(\"Unexpected Response\", function () {\r",
									"        pm.expect.fail(\"Unexpected response code: \" + pm.response.code);\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"otp\": \"599953\",\r\n    \"newPassword\": \"password\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{host}}/api/forget-password/reset-password"
					},
					"response": [
						{
							"name": "Reset Password",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"otp\": \"302240\",\r\n    \"newPassword\": \"87654321\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host}}/api/forget-password/reset-password"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Vary",
									"value": "Origin"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Method"
								},
								{
									"key": "Vary",
									"value": "Access-Control-Request-Headers"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "0"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 14:20:12 GMT"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=60"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbGpvdmFubUBnbWFpbC5jb20iLCJpYXQiOjE3MDQ2MzcyMTIsImV4cCI6MTcwNTEzNzIxMn0.FyxoAYDxfDduVzlz4OvqWjfjE-i-P1M6aVUS9W3d3pc\",\n        \"type\": \"Bearer\",\n        \"email\": \"aljovanm@gmail.com\",\n        \"roles\": [\n            \"ROLE_BUYER\"\n        ]\n    },\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Reset Password tes",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"otp\": \"075332\",\r\n    \"newPassword\": \"inipasswordbaru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/forget-password/reset-password"
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "ed539cdb8879eb9bd3e6397f331c4cb8;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 15:02:21 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "256"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"token\": \"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbGpvdmFubUBnbWFpbC5jb20iLCJpYXQiOjE3MDQ2Mzk3NDEsImV4cCI6MTcwNTEzOTc0MX0.cif-P1jIA3So8smLjJ9p5A2-h-6glFWGtAWGvmjET2Q\",\n        \"type\": \"Bearer\",\n        \"email\": \"aljovanm@gmail.com\",\n        \"roles\": [\n            \"ROLE_BUYER\"\n        ]\n    },\n    \"status\": \"success\"\n}"
						},
						{
							"name": "Reset Password tes fail",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"otp\": \"075332\",\r\n    \"newPassword\": \"inipasswordbaru\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{host_tes}}/api/forget-password/reset-password"
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "vary",
									"value": "Origin,Access-Control-Request-Method,Access-Control-Request-Headers"
								},
								{
									"key": "x-content-type-options",
									"value": "nosniff"
								},
								{
									"key": "x-xss-protection",
									"value": "0"
								},
								{
									"key": "cache-control",
									"value": "no-cache, no-store, max-age=0, must-revalidate"
								},
								{
									"key": "pragma",
									"value": "no-cache"
								},
								{
									"key": "expires",
									"value": "0"
								},
								{
									"key": "x-frame-options",
									"value": "DENY"
								},
								{
									"key": "content-type",
									"value": "application/json"
								},
								{
									"key": "X-Cloud-Trace-Context",
									"value": "e8862adb71eafa7a4dc0fe189e4b3da0;o=1"
								},
								{
									"key": "Date",
									"value": "Sun, 07 Jan 2024 15:02:55 GMT"
								},
								{
									"key": "Server",
									"value": "Google Frontend"
								},
								{
									"key": "Content-Length",
									"value": "48"
								},
								{
									"key": "Alt-Svc",
									"value": "h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000"
								}
							],
							"cookie": [],
							"body": "{\n    \"data\": {\n        \"otp\": \"OTP not found\"\n    },\n    \"status\": \"fail\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{tokens}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{host}}/api/notifications"
					},
					"response": []
				}
			]
		}
	]
}